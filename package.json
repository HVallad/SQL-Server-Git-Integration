{
  "name": "sql-server-git-integration",
  "displayName": "SQL Server Git Integration",
  "description": "Uses your database connection via MSSQL to create and maintain a repo with your git repo!",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other"
  ],
  "extensionDependencies": [
    "ms-mssql.mssql"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sql-server-git-integration.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "sql-server-git-integration.initGitRepo",
        "title": "Initialize Git Repository",
        "icon": "$(repo-create)"
      },
      {
        "command": "sql-server-git-integration.dbSourceControl",
        "title": "Open Database Source Control",
        "icon": "$(sync)"
      },
      {
        "command": "sql-server-git-integration.viewGitHistory",
        "title": "View Git History",
        "icon": "$(history)"
      },
      {
        "command": "sql-server-git-integration.stageFile",
        "title": "Stage Changes",
        "icon": "$(add)"
      },
      {
        "command": "sql-server-git-integration.unstageFile",
        "title": "Unstage Changes",
        "icon": "$(remove)"
      },
      {
        "command": "sql-server-git-integration.stageAll",
        "title": "Stage All Changes",
        "icon": "$(add)"
      },
      {
        "command": "sql-server-git-integration.unstageAll",
        "title": "Unstage All Changes", 
        "icon": "$(remove)"
      },
      {
        "command": "sql-server-git-integration.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "sql-server-git-integration.initGitRepo",
          "when": "view == objectExplorer && viewItem =~ /\\btype=(Database)\\b/",
          "group": "sqlgit@1"
        },
        {
          "command": "sql-server-git-integration.dbSourceControl",
          "when": "view == objectExplorer && viewItem =~ /\\btype=(Database)\\b/",
          "group": "sqlgit@2"
        },
        {
          "command": "sql-server-git-integration.viewGitHistory",
          "when": "view == objectExplorer && viewItem =~ /\\btype=(Database)\\b/",
          "group": "sqlgit@3"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "sql-server-git-integration.stageFile",
          "when": "scmProvider == 'sqlServerGitIntegration' && scmResourceState == 'unstaged'",
          "group": "inline"
        },
        {
          "command": "sql-server-git-integration.unstageFile", 
          "when": "scmProvider == 'sqlServerGitIntegration' && scmResourceState == 'staged'",
          "group": "inline"
        }
      ],
      "scm/resourceGroup/context": [
        {
          "command": "sql-server-git-integration.stageAll",
          "when": "scmProvider == 'sqlServerGitIntegration'",
          "group": "inline"
        },
        {
          "command": "sql-server-git-integration.unstageAll",
          "when": "scmProvider == 'sqlServerGitIntegration'", 
          "group": "inline"
        }
      ],
      "scm/title": [
        {
          "command": "sql-server-git-integration.refresh",
          "when": "scmProvider == 'sqlServerGitIntegration'",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "SQL Server Git Integration",
      "properties": {
        "sqlServerGitIntegration.databaseDirectories": {
          "type": "object",
          "default": {},
          "description": "Directory paths for each database/server combination. Keys are in format 'serverName_databaseName'.",
          "scope": "application"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/mssql": "^9.1.7",
    "@types/node": "20.x",
    "@types/tedious": "^4.0.14",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "msnodesqlv8": "^4.2.1",
    "mssql": "^10.0.1"
  }
}
